== Begin: config.py.txt
import json
import os
from dotenv import load_dotenv

# Load environment variables from .env
load_dotenv()

# Paths
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
CONFIG_FILE = os.path.join(BASE_DIR, 'config', 'config.json')

# Load JSON configuration
with open(CONFIG_FILE, 'r') as f:
    config = json.load(f)

# Configuration variables
PORT = config.get('PORT', 5000)
DEBUG_MODE = config.get('DEBUG_MODE', True)
CURRENT_GEN = "3"

# Sensitive information from .env
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
GITHUB_API_URL = os.getenv('GITHUB_API_URL')
ASSISTANT_ID = os.getenv('ASSISTANT_ID')
PINECONE_API_KEY = os.getenv('PINECONE_API_KEY')
PINECONE_INDEX_NAME = os.getenv('PINECONE_INDEX_NAME')
GITHUB_USERNAME = os.getenv('GITHUB_USERNAME')

== End: config.py.txt

== Begin: config.py.txt
# config.py
from dotenv import load_dotenv
import os

load_dotenv()

PORT = int(os.getenv('PORT', 5000))  # Default to port 5000 if not set
DEBUG_MODE = os.getenv('DEBUG_MODE', 'True').lower() in ['true', '1', 't']

# API keys and other configuration
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
GITHUB_API_URL = os.getenv('GITHUB_API_URL')
ASSISTANT_ID = os.getenv('ASSISTANT_ID')
PINECONE_API_KEY = os.getenv('PINECONE_API_KEY')
PINECONE_INDEX_NAME = os.getenv('PINECONE_INDEX_NAME')
GITHUB_USERNAME = os.getenv('GITHUB_USERNAME')

== End: config.py.txt

== Begin: config.py.txt
# config.py
from dotenv import load_dotenv
import os

load_dotenv()

PORT = int(os.getenv('PORT', 5000))  # Default to port 5000 if not set
DEBUG_MODE = os.getenv('DEBUG_MODE', 'True').lower() in ['true', '1', 't']

# API keys and other configuration
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
GITHUB_API_URL = os.getenv('GITHUB_API_URL')
ASSISTANT_ID = os.getenv('ASSISTANT_ID')
PINECONE_API_KEY = os.getenv('PINECONE_API_KEY')
PINECONE_INDEX_NAME = os.getenv('PINECONE_INDEX_NAME')
GITHUB_USERNAME = os.getenv('GITHUB_USERNAME')

== End: config.py.txt

== Begin: pyproject.toml.txt
[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

== End: pyproject.toml.txt

== Begin: requirements.txt.txt
blinker==1.8.2
brotlipy==0.7.0
certifi==2022.12.7
cffi==1.15.1
charset-normalizer==2.1.1
click==8.1.7
Flask==3.0.3
gunicorn==22.0.0
idna==3.4
itsdangerous==2.2.0
Jinja2==3.1.4
MarkupSafe==2.1.5
numpy==1.24.2
python-dotenv==1.0.1
requests==2.28.1
setuptools==69.2.0
wheel==0.43.0
Werkzeug==3.0.3
pinecone-client==4.1.1
== End: requirements.txt.txt

== Begin: runtime.txt.txt
python-3.10.14
== End: runtime.txt.txt

