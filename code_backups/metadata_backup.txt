== Begin: command_list.txt.txt
add_action
add_color
betterdirection
calculate_spent
chat_bubble
disable_heartbeat
enable_heartbeat
execute_action
game_end
goto_planet
jump_planet
level_up
list_actions
list_clients
list_colors
list_commands
list_variables
load_game
loadtrack
loadtrack2
name_color
return_controller
save_actions
save_game
save_macros
savetrack
set_my_permission
set_variable
show_gamepad_mapping
show_lines
show_variable
show_wpm
slider_cluster
toggle_debug
toggle_input_display
toggle_log_debug
toggle_server

== End: command_list.txt.txt

== Begin: planned_features.json.txt
[
  {
    "name": "Automatic Commit Message Creation",
    "description": "Implement automatic generation of commit messages that include fixed bugs and added features.",
    "source": "SYSTEM",
    "priority": "high",
    "status": "planned",
    "date_planned": "2024-06-20",
    "planned_by": "AI Assistant",
    "assigned_to": "Dev Team",
    "generation": "2",
    "related_logs": [
      "No related logs"
    ],
    "implementation_steps": [
      "Step 1: Design the auto commit message generator.",
      "Step 2: Implement the logic to fetch closed bugs and added features.",
      "Step 3: Integrate with the deploy_all.sh script.",
      "Step 4: Test the functionality."
    ],
    "expected_outcome": [
      "Expected outcome: Automatic commit messages including recent changes."
    ],
    "related_features": [
      "No related features"
    ],
    "related_objects": [
      "No related objects"
    ],
    "related_scripts": [
      "No related scripts"
    ]
  },
  {
    "name": "Interface Application",
    "description": "Create an application interface for controlling the Git GPT server.",
    "source": "SYSTEM",
    "priority": "high",
    "status": "planned",
    "date_planned": "2024-06-20",
    "planned_by": "AI Assistant",
    "assigned_to": "Dev Team",
    "generation": "2",
    "related_logs": [
      "No related logs"
    ],
    "implementation_steps": [
      "Step 1: Design the interface.",
      "Step 2: Implement the basic UI.",
      "Step 3: Integrate with the backend.",
      "Step 4: Test all functionalities."
    ],
    "expected_outcome": [
      "Expected outcome: A functional application interface for controlling the server."
    ],
    "related_features": [
      "No related features"
    ],
    "related_objects": [
      "No related objects"
    ],
    "related_scripts": [
      "No related scripts"
    ]
  },
  {
    "name": "Documentation Updates",
    "description": "Update the project documentation to reflect the latest changes and improvements.",
    "source": "SYSTEM",
    "priority": "high",
    "status": "planned",
    "date_planned": "2024-06-20",
    "planned_by": "AI Assistant",
    "assigned_to": "Dev Team",
    "generation": "2",
    "related_logs": [
      "No related logs"
    ],
    "implementation_steps": [
      "Step 1: Review existing documentation.",
      "Step 2: Update documentation with new features.",
      "Step 3: Ensure accuracy and completeness."
    ],
    "expected_outcome": [
      "Expected outcome: Updated and accurate project documentation."
    ],
    "related_features": [
      "No related features"
    ],
    "related_objects": [
      "No related objects"
    ],
    "related_scripts": [
      "No related scripts"
    ]
  },
  {
    "name": "Automate Testing",
    "description": "Automate the testing process to ensure continuous integration and delivery.",
    "source": "SYSTEM",
    "priority": "low",
    "status": "planned",
    "date_planned": "2024-06-20",
    "planned_by": "AI Assistant",
    "assigned_to": "Dev Team",
    "generation": "2",
    "related_logs": [
      "No related logs"
    ],
    "implementation_steps": [
      "Step 1: Identify critical test cases.",
      "Step 2: Implement automated tests.",
      "Step 3: Integrate tests with CI/CD pipeline.",
      "Step 4: Monitor test results."
    ],
    "expected_outcome": [
      "Expected outcome: Automated testing integrated into CI/CD pipeline."
    ],
    "related_features": [
      "No related features"
    ],
    "related_objects": [
      "No related objects"
    ],
    "related_scripts": [
      "No related scripts"
    ]
  },
  {
    "name": "Sample Feature",
    "description": "Implement a sample feature for testing purposes.",
    "source": "SYSTEM",
    "priority": "medium",
    "status": "planned",
    "date_planned": "2024-06-20",
    "planned_by": "Tester",
    "assigned_to": "Dev Team",
    "generation": "2",
    "related_logs": [
      "No related logs"
    ],
    "implementation_steps": [
      "Step 1: Design the feature.",
      "Step 2: Implement the feature.",
      "Step 3: Test the feature."
    ],
    "expected_outcome": [
      "Expected outcome: A sample feature implemented for testing purposes."
    ],
    "related_features": [
      "No related features"
    ],
    "related_objects": [
      "No related objects"
    ],
    "related_scripts": [
      "No related scripts"
    ]
  },
  {
    "name": "Chat_Bubbles_with_Choices",
    "description": "Implement customizable chat bubbles with 2-4 selectable choices, allowing for branching dialogues and multiple action triggers per choice.",
    "source": "SYSTEM",
    "priority": "high",
    "status": "planned",
    "date_planned": "2024-07-19",
    "planned_by": "Jay Arnold",
    "assigned_to": "Dev Team",
    "generation": "2",
    "related_logs": [
      "No related logs"
    ],
    "implementation_steps": [
      "Step 1: Design the obj_chat_bubble_choice object based on existing obj_chat_bubble.",
      "Step 2: Implement scr_choice_bubble script to handle choice creation and layout.",
      "Step 3: Develop the /choice_bubble command parser.",
      "Step 4: Implement action triggering system for choices.",
      "Step 5: Create UI layout for 2-4 choices (2 rows if 3+ choices).",
      "Step 6: Integrate with existing chat bubble system.",
      "Step 7: Test with various scenarios (2-4 choices",
      " multiple actions",
      " branching)."
    ],
    "expected_outcome": [
      "Expected outcome: A fully functional chat bubble system with clickable choices",
      " supporting branching dialogues and multiple action triggers per choice."
    ],
    "related_features": [
      "No related features"
    ],
    "related_objects": [
      "obj_chat_bubble",
      "obj_Client"
    ],
    "related_scripts": [
      "get_longest_word_width",
      "drawTextWithOutline",
      "scr_chat_bubble",
      "scr_add_action",
      "save_actions",
      "scr_execute_action",
      "handleDebugMessage",
      "execute_command",
      "update_chat_input_visuals",
      "parse_data_types",
      "parse_arguments"
    ]
  },
  {
    "name": "Custom_AI_Terminal_Assistant",
    "description": "Train a GPT or Claude bot to assist populating the bug and feature list.",
    "source": "System",
    "priority": "high",
    "status": "planned",
    "date_planned": "2024-07-19",
    "planned_by": "Jay Arnold",
    "assigned_to": "Dev Team",
    "generation": "2",
    "related_logs": [
      "No related logs"
    ],
    "implementation_steps": [
      "Step 1: Just do it?"
    ],
    "expected_outcome": [
      "Expected outcome: A chat bot that responds with concise well formatted and fully informed commands that streamline the process of compiling the information relevant case to case."
    ],
    "related_features": [
      "No related features"
    ],
    "related_objects": [
      "master",
      "obj_Client",
      "yeancat",
      "enemy",
      "cancelledsign",
      "obj_terrain",
      "obj_boss",
      "obj_controlhs",
      "obj_backg"
    ],
    "related_scripts": [
      "scr_add_action",
      "save_actions",
      "scr_execute_action",
      "handleDebugMessage",
      "execute_command",
      "update_chat_input_visuals",
      "parse_data_types",
      "parse_arguments",
      "scr_save_game",
      "scr_load_game"
    ]
  }
]

== End: planned_features.json.txt

