#!/bin/bash

# Function to backup a directory with specific file pattern
backup_directory() {
    local source_dir=$1
    local backup_file=$2
    local pattern=$3
    
    echo "Backing up files from $source_dir to $backup_file..."
    find "$source_dir" -type f -name "$pattern" | while read -r file; do
        echo "== Begin: ${file##*/}" >> "$backup_file"
        cat "$file" >> "$backup_file"
        echo -e "\n== End: ${file##*/}\n" >> "$backup_file"
    done
    echo "Backup completed for $source_dir to $backup_file"
}

# Backup Scripts
backup_directory "code_text/GIT_GPT_SERVER/scripts" "code_backups/scripts_backup.txt" "*.txt"

# Backup Logs
backup_directory "code_text/GIT_GPT_SERVER/Logs" "code_backups/logs_backup.txt" "*.txt"

# Backup Routes
backup_directory "code_text/GIT_GPT_SERVER/routes" "code_backups/routes_backup.txt" "*.txt"

# Backup Tests
backup_directory "code_text/GIT_GPT_SERVER/scripts/tests" "code_backups/tests_backup.txt" "*.txt"

# Backup Utils
backup_directory "code_text/GIT_GPT_SERVER/utils" "code_backups/utils_backup.txt" "*.txt"

# Backup Prompts
backup_directory "code_text/GIT_GPT_SERVER/prompts" "code_backups/prompts_backup.txt" "*.txt"

# Backup Documentation (only documentation-related files)
backup_directory "code_text" "code_backups/documentation_backup.txt" "README.md.txt intro.txt.txt format_description.txt.txt"

# Backup Configs (only config-related files)
backup_directory "code_text" "code_backups/config_backup.txt" "config.py.txt pyproject.toml.txt requirements.txt.txt runtime.txt.txt"

# Backup Metadata (only metadata-related files)
backup_directory "code_text" "code_backups/metadata_backup.txt" "command_list.txt.txt planned_features.json.txt"

echo "Ensuring all files in code_text have the correct extensions..."
echo "Backup script completed successfully!"
